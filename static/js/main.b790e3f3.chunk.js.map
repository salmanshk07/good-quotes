{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","allQuotes","HighlightedQuote","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","addCommentHandler","quoteId","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","comments","useState","isAddingComment","setIsAddingComment","useEffect","length","CommentsWrapper","comment","QuoteDetail","params","useParams","match","useRouteMatch","find","path","exact","classname","url","Card","card","children","LoadingSpinner","spinner","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","message","onFocus","enteredAuthor","enteredText","onAddQuote","isLoading","loading","type","NewQuote","addQuoteHandler","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","DUMMY_QUOTES","randomAuthors","App","updateQuotes","commentData","quoteIndex","findIndex","Math","floor","random","updatedQuotes","quoteTobeUpdated","updatedQuote","quoteData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b790e3f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\",\"CommentsWrapper\":\"Comments_CommentsWrapper__2cidC\",\"author\":\"Comments_author__1w-nF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","\n\nimport classes from './QuoteItem.module.css';\nimport {Link} from  'react-router-dom'\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  // const changeSortingHandler = () => {\n  //   history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n  // };\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;","import QuoteList from \"../components/quotes/QuoteList\";\r\n\r\nconst AllQuotes = ({allQuotes}) => {\r\n  return <QuoteList quotes={allQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const { addCommentHandler, quoteId } = props;\n    addCommentHandler(quoteId, commentTextRef.current.value);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = ({ comments, addCommentHandler, id }) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => setIsAddingComment(false), [comments]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm addCommentHandler={addCommentHandler} quoteId={id} />\n      )}\n      {comments.length > 0 &&\n        comments.map((item) => (\n          <div className={classes.CommentsWrapper}>\n            <p className={classes.author}>{item.author}:</p>\n            <p>{item.comment}</p>\n          </div>\n        ))}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\n\r\nconst QuoteDetail = ({ allQuotes, addCommentHandler }) => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const quote = allQuotes.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n  \r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link classname=\"btn--flat\" to={`${match.url}/comments`}>\r\n            LOAD COMMENTS\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments\r\n          comments={quote.comments}\r\n          addCommentHandler={addCommentHandler}\r\n          {...quote}\r\n        />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;","import QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nconst NewQuote = ({ addQuoteHandler }) => {\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to='/quotes' activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/new-quote' activeClassName={classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;","import { Fragment } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout","const NotFound = () => {\r\n    return (\r\n      <div className='centered'>\r\n        <p>Page not found!</p>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default NotFound;","import { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NewQuote from \"./pages/NewQuote\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\nimport { useState } from \"react\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\", comments: [] },\n  {\n    id: \"q2\",\n    author: \"Maximilian\",\n    text: \"Learning React is great!\",\n    comments: [{ author: \"jack\", comment: \"Nice saying!\" }],\n  },\n];\n\nconst randomAuthors = [\"jack\", \"john\", \"harry\"];\n\nfunction App() {\n  const [quotes, updateQuotes] = useState(DUMMY_QUOTES);\n  const history = useHistory();\n\n  const addQuoteHandler = (quoteData) => {\n    const quoteId = `q${quotes.length + 1}`;\n    const updatedQuotes = [\n      ...quotes,\n      { ...quoteData, id: quoteId, comments: [] },\n    ];\n    updateQuotes(updatedQuotes);\n    history.push(\"/quotes\");\n  };\n\n  const addCommentHandler = (quoteId, commentData) => {\n    const quoteIndex = quotes.findIndex((quote) => quote.id === quoteId);\n    var author =\n      randomAuthors[Math.floor(Math.random() * randomAuthors.length)];\n    const updatedQuotes = [...quotes];\n    const quoteTobeUpdated = updatedQuotes[quoteIndex];\n    const updatedQuote = {\n      ...quoteTobeUpdated,\n      comments: [\n        ...quoteTobeUpdated.comments,\n        { author: author, comment: commentData },\n      ],\n    };\n\n    updatedQuotes[quoteIndex] = updatedQuote;\n    updateQuotes(updatedQuotes);\n  };\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes allQuotes={quotes} />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail\n            allQuotes={quotes}\n            addCommentHandler={addCommentHandler}\n          />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote addQuoteHandler={addQuoteHandler} />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n"],"sourceRoot":""}